// <auto-generated />
using CohoWineryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CohoWineryAPI.Migrations
{
    [DbContext(typeof(VineyardContext))]
    partial class VineyardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CohoWineryAPI.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1000,
                            CustomerId = 52,
                            DeliveryAddress = "900 Fibrakam Way, San Saba, TX 76877"
                        });
                });

            modelBuilder.Entity("CohoWineryAPI.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            OrderId = 1000,
                            ProductId = 4,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 101,
                            OrderId = 1000,
                            ProductId = 8,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 102,
                            OrderId = 1000,
                            ProductId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("CohoWineryAPI.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Shimmer Shugart",
                            Style = "Sparkling"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Snowfall",
                            Style = "Light Bodied White"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sturm Chardonnay",
                            Style = "Full Bodied White"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Muscat Blanc",
                            Style = "Aromatic White"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Doe Creek Rose",
                            Style = "Rose"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Oregon Pinot Noir",
                            Style = "Light Bodied Red"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Grumps Nebbiolo",
                            Style = "Medium Bodied Red"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Texan Sunset Syrah",
                            Style = "Full Bodied Red"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Raspberry Honey",
                            Style = "Dessert"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Whitten's Tawny Port",
                            Style = "Fortified"
                        });
                });

            modelBuilder.Entity("CohoWineryAPI.OrderItem", b =>
                {
                    b.HasOne("CohoWineryAPI.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CohoWineryAPI.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CohoWineryAPI.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
